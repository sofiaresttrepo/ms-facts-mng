type CommandResponse {
  "Response code"
  code: Int
  "Response message"
  message: String
}

type FactsMngSharkAttack {
  "SharkAttack ID"
  id: ID!
  "organization id"
  organizationId: String!
  "The date of the incident"
  date: String
  "The year of the incident"
  year: Int
  "The type of shark attack"
  type: String
  "The country where the incident occurred"
  country: String
  "The specific area where the incident occurred"
  area: String
  "The specific location of the incident"
  location: String
  "The activity the victim was engaged in"
  activity: String
  "The name of the victim"
  name: String
  "The sex of the victim"
  sex: String
  "The age of the victim"
  age: String
  "The outcome of the incident"
  injury: String
  "Whether the incident was fatal (Y/N)"
  fatal_y_n: String
  "The time of the incident"
  time: String
  "The species of shark involved"
  species: String
  "The investigator or source of the report"
  investigator_or_source: String
  "The name of the associated PDF file"
  pdf: String
  "The formula for the link to the PDF file"
  href_formula: String
  "The direct link to the PDF file"
  href: String
  "The case number assigned to the incident"
  case_number: String
  "An alternative case number for the incident"
  case_number0: String
  "SharkAttack active flag"
  active: Boolean!
  "object metadata"
  metadata: FactsMngSharkAttackMetadata
}

type FactsMngSharkAttackMetadata {
    createdBy: String
		createdAt: BigInt
		updatedBy: String
		updatedAt: BigInt
}

type FactsMngSharkAttackListing {
  "Listing"
  listing: [FactsMngSharkAttack]
  "query total result count"
  queryTotalResultCount: Int,  
}


input FactsMngSharkAttackFilterInput {
  "organization id"
  organizationId: String!
  "The name of the victim"
  name: String
  "The country where the incident occurred"
  country: String
  "The year of the incident"
  year: Int
  "The type of shark attack"
  type: String
  "SharkAttack active flag"
  active: Boolean
}

input FactsMngSharkAttackPaginationInput {
  "Page"
  page: Int!
  "Count"
  count: Int!
  "query total result count flag"
  queryTotalResultCount: Boolean
}

input FactsMngSharkAttackSortInput {
  field: String!,
  asc: Boolean!,
}

input FactsMngSharkAttackInput {
  "organization id"
  organizationId: String!
  "The date of the incident"
  date: String
  "The year of the incident"
  year: Int
  "The type of shark attack"
  type: String
  "The country where the incident occurred"
  country: String
  "The specific area where the incident occurred"
  area: String
  "The specific location of the incident"
  location: String
  "The activity the victim was engaged in"
  activity: String
  "The name of the victim"
  name: String
  "The sex of the victim"
  sex: String
  "The age of the victim"
  age: String
  "The outcome of the incident"
  injury: String
  "Whether the incident was fatal (Y/N)"
  fatal_y_n: String
  "The time of the incident"
  time: String
  "The species of shark involved"
  species: String
  "The investigator or source of the report"
  investigator_or_source: String
  "The name of the associated PDF file"
  pdf: String
  "The formula for the link to the PDF file"
  href_formula: String
  "The direct link to the PDF file"
  href: String
  "The case number assigned to the incident"
  case_number: String
  "An alternative case number for the incident"
  case_number0: String
  "SharkAttack active flag"
  active: Boolean
}


type SharkAttackCase {
  "The country where the incident occurred"
  country: String
  "The date of the incident"
  date: String
  "The activity the victim was engaged in"
  activity: String
  "The specific location of the incident"
  location: String
}

type Query {
  "Get SharkAttacks filtered "
  FactsMngSharkAttackListing(filterInput: FactsMngSharkAttackFilterInput, paginationInput: FactsMngSharkAttackPaginationInput, sortInput: FactsMngSharkAttackSortInput): FactsMngSharkAttackListing
  "Get SharkAttack by its id"
  FactsMngSharkAttack(id: ID!, organizationId: String!): FactsMngSharkAttack
  "Get more shark attack cases by country from external API"
  moreSharkAttacksByCountry(country: String!): [SharkAttackCase]
}

type Mutation {
  "Create a new SharkAttack"
  FactsMngCreateSharkAttack(input: FactsMngSharkAttackInput!): FactsMngSharkAttack
  "Update an SharkAttack"
  FactsMngUpdateSharkAttack(id: ID!, input: FactsMngSharkAttackInput!, merge: Boolean!): FactsMngSharkAttack  
  "Deletes an SharkAttack"
  FactsMngDeleteSharkAttacks(ids: [ID]!): CommandResponse  
}


type Subscription {
  "This events is triggered when a sharkAttack updated or deleted"
  FactsMngSharkAttackModified(id: ID!): FactsMngSharkAttack
}
